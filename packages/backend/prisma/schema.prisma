// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedIndexes"]

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UsersProfile {
  id     String  @id @default(uuid()) @db.Uuid
  name   String? @db.VarChar(100)
  wallet String  @unique @db.VarChar(100)
  email  String? @unique @db.VarChar(100)

  JobsApplicant JobsApplicant[]
  JobsData      JobsData[]
  @@map("users_profile")
}

enum BiddingType {
  OPEN_BID
  OPEN_FIX
  VERIFIED_BID
  VERIFIED_FIX
  WHITELIST_BID
  WHITELIST_FIX
}

enum JobState {
  DRAFT
  TENDER
  PROGRESS
  FINISHED
}

model JobsData {
  id              String          @id @default(uuid()) @db.Uuid
  createdAt       DateTime        @map("created_at")
  finishedAt      DateTime?       @map("finished_at")
  title           String          @db.VarChar(200)
  body            String
  link            String?
  biddingType     BiddingType     @default(OPEN_BID) @map("bidding_type")
  price           Float           @default(0)
  contractAddress String?         @map("contract_address")
  state           JobState
  Applicants      JobsApplicant[]
  creator         UsersProfile    @relation(fields: [creatorID], references: [id])
  creatorID       String          @db.Uuid

  @@index([creatorID])
  @@map("jobs_data")
}

enum ApplicantState {
  ACCEPTED
  PROGRESS
  REJECTED
}

model JobsApplicant {
  jobID    String         @map("job_id") @db.Uuid
  userID   String         @map("user_id") @db.Uuid
  job      JobsData       @relation(fields: [jobID], references: [id])
  user     UsersProfile   @relation(fields: [userID], references: [id])
  bidPrice Float          @map("bid_price")
  state    ApplicantState

  @@id([jobID, userID])
  @@index([userID])
  @@index([jobID])
  @@map("jobs_applicant")
}
